@import './common/reset.scss';
@import url("https://cdn.jsdelivr.net/gh/orioncactus/pretendard@v1.3.6/dist/web/variable/pretendardvariable-dynamic-subset.css");

$font-family: 'Pretendard Variable', sans-serif;

body {
  background-color: var(--bg-light-point-200);
  font-size: $font-size-M-pc;
  line-height: 1.5;
  color: var(--color-black);
  font-family: $font-family;
  letter-spacing: -0.05em;
}
small {
  font-size: $font-size-XS-pc;
}
button, a, input {
  font-family: $font-family;
  letter-spacing: -0.05em;
}
button:hover,
a:hover {
  opacity: 0.8;
  transition: opacity 0.2s;
}
i {
  font-style: normal;
}

// layout
.mrg-top-medium {
  margin-top: 30px;
}
.mrg-top-small {
  margin-top: 10px;
}
[class*=inner-size] {
  position: relative;
  transition: width 0.5s;
  &.inner-size-basic {
    @include containerSize('basic');
  }
  &.inner-size-wide {
    @include containerSize('wide');
  }
}

//  top bar
.top-bar {
  padding: 6px 0;
  background-color: $color-point-400;
  > [class*=inner] {
    display: flex;
    > .align-right {
      margin-left: auto;
    }
  }
}


// ir
caption, .ir-hidden {
  position: absolute;
  overflow: hidden;
  width: 1px;
  height: 1px;
  font-size: 1px;
}

// svg icon
.svg-icon {
  width: 1em;
  height: 1em;
}

.svg-icon path,
.svg-icon polygon,
.svg-icon rect {
  fill: $color-point;
}

.svg-icon circle {
  stroke: $color-point;
  stroke-width: 1;
}

// icon
.icon-arrow {
  position: relative;
  display: inline-block;
  width: 10px;
  height: 10px;
  &:before {
    position: absolute;
    display: block;
    width: 8px;
    height: 8px;
    border: 2px solid var(--color-white);
    border-left: none;
    border-bottom: none;
    content: '';
    transition: transform 0.3s;
  }
  &.small {
    margin-left: 0.45em;
    &:before {
      width: 0.45em;
      height: 0.45em;
      border-width: 1px;
    }
    &.down,
    &.up {
      width: 0.7em;
      height: 6px;
    }
  }
  &.wide {
    &.up {
      height: 8px;
      &:before {
        border-width: 1px;
        transform: rotate(-45deg) translate(-10%, 30%) skew(10deg, 10deg);
      }
    }
    &.down {
      height: 8px;
      &:before {
        border-width: 1px;
        transform: rotate(135deg) translate(-40%, -30%) skew(10deg, 10deg);
      }
    }
  }
  &.down {
    &:before {
      right: 45%;
      transform: rotate(135deg) translate(-50%, -5%);
    }
  }
  &.up {
    &:before {
      right: 25%;
      transform: rotate(-45deg) translate(-10%, 30%);
    }
  }
  &.right:before {
    right: 25%;
    top: 50%;
    transform: rotate(45deg) translateX(-50%);
  }
  &.border-neon:before {
    border-color: $color-neon;
  }
  &.border-point {
    &:before {
      border-color: $color-point;
    }
  }
  &.border-dark-gray {
    &:before {
      border-color: var(--border-dark-gray);
    }
  }
}
.icon-bar-arrow {
  display: inline-block;
  position: relative;
  width: 9px;
  height: 2px;
  margin: 6px 0 6px 4px;
  box-shadow: inset 0 0 0 2px;
  transform: translateX(-3px);
  transition: transform 0.3s;
  &:before {
    display: inline-block;
    position: absolute;
    top: 50%;
    left: 100%;
    right: auto;
    border-width: 4px 0 4px 4px;
    border-style: solid;
    border-color: transparent;
    border-left-color: inherit;
    transform: translateY(-50%);
    content: '';
  }
  &.left {
    transform: rotate(180deg);
  }
  & + .icon-bar-arrow {
    margin-left: 8px;
  }
}
.wrap-icon-text {
  [class*=icon-] {
    margin-left: 5px;
  }
}

// badge
.badges {
  display: flex;
  &.badge-gap {
    gap: 5px;
  }
  &:not(.badge-gap) {
    .badges {
      &:not([class*=line-]):nth-child(n+2) {
        border-left: none;
      }
    }
  }
}
.badge {
  min-width: 1.5em;
  padding: 0 1px 1px;
  border: 1px solid #333;
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 11px;
  font-weight: 500;
  line-height: 1;
  text-align: center;
  word-spacing: -0.1em;
  &.type-round {
    padding: 2px 5px 3px 5px;
    border-radius: 5px;
  }
  &.size-big {
    font-size: $font-size-S-pc;
  }
  &.black {
    background-color: rgba(0, 0, 0, 0.8);
    font-weight: 300;
    color: #fff;
    letter-spacing: 0;
  }
  &.point {
    background-color: $color-point;
    border-color: $color-point;
    font-weight: 300;
    color: #fff;
    letter-spacing: 0;
  }
  &.line-gold {
    border: 1px solid $color-gold;
  }
  &.line-gray {
    border: 1px solid var(--border-gray-100);
  }
  &.banned {
    margin-left: 5px;
    background-color: $color-ban;
    font-weight: 300;
    color: #ffc;
  }
}
.badge-text-wrap {
  display: inline-flex;
  align-items: center;
  gap: 3px;
}
//  content top
.text-refer {
  display: flex;
  align-items: center;
  font-size: $font-size-MS-pc;
  &.top {
    margin-bottom: 6px;
  }
  &.bottom {
    margin-top: 6px;
  }
  > [class*=align-] {
    display: inline-flex;
    align-items: center;
    > p:nth-child(n + 2) {
      position: relative;
      padding-left: 10px;
      margin-left: 10px;
      &:before {
        position: absolute;
        left: 0;
        color: var(--color-gray);
        transform: translate(-50%, 0);
        content: '|';
      }
    }
  }
  > .align-right {
    margin-left: auto;
  }
}

// title
.area-page-title {
  border-bottom: 1px solid #aaa;
  margin-bottom: 10px;
  padding-bottom: 2px;
  letter-spacing: 0.01em;
  > .title {
    font-weight: bold;
  }
  .skull {
    font-size: 1.1em;
  }
}

// link
.text-link {
  color: $color-point;
}
// bar-notice
.bar-notice {
  width: 100%;
  padding: 10px;
  margin-bottom: 30px;
  border: 1px solid $color-point;
  background-color: rgba(255, 255, 255, 0.5);
  color: $color-point;
  text-align: center;
  a {
    color: inherit;
  }
}

// list button
.list-button-common {
  display: flex;
  flex-wrap: wrap;
  gap: $list-gap-basic;
}
.sub-nav-common {
  display: block;
  background-color: var(--color-white);
  opacity: 0.6;
  &.nuxt-link-active {
    opacity: 1;
  }
}

//  gray box
.box-gray {
  padding: 10px 10px;
  border-radius: 5px;
  background-color: #f6f6f6;
  & + .box-gray {
    margin-top: 5px;
  }
  > .title {
    font-weight: bold;
    margin-bottom: 0.5em;
  }
}

// positive / netavie
.color {
  &-positive {
    color: $color-point-sub
  }
  &-negative,
  &-point {
    color: $color-point;
  }
  &-banned {
    color: $color-ban;
  }
}
.line {
  &-positive {
    border-color: $color-point-sub-pale;
  }
  &-negative {
    border-color: $color-point-pale;
  }
}